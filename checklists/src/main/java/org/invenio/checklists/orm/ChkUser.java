package org.invenio.checklists.orm;
// Generated Jan 10, 2017 5:36:21 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

/**
 * ChkUser generated by hbm2java
 */
@Entity
@Table(name = "chk_user")
public class ChkUser implements java.io.Serializable {

    private String id;
    private String email;
    private String password;
    private String firstName;
    private String lastName;
    private String company;
    private Date dateCreated;
    private Date dateModified;
    private String token;
    private Date tokenLastAccess;
    private Boolean tokenExpired;
    private Set<Checklist> checklists = new HashSet<>(0);

    @Id
    @GenericGenerator(name = "id", strategy = "org.invenio.checklists.util.RandomUUIDGenerator")
    @GeneratedValue(generator = "id")
    @Column(name = "id", unique = true, nullable = false, length = 36)
    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @Column(name = "email", nullable = false, length = 128)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "password", nullable = false, length = 45)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "first_name", nullable = false, length = 128)
    public String getFirstName() {
        return this.firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "last_name", nullable = false, length = 128)
    public String getLastName() {
        return this.lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "company", length = 128)
    public String getCompany() {
        return this.company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "date_created", nullable = false, length = 19)
    public Date getDateCreated() {
        return this.dateCreated;
    }

    public void setDateCreated(Date dateCreated) {
        this.dateCreated = dateCreated;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "date_modified", nullable = false, length = 19)
    public Date getDateModified() {
        return this.dateModified;
    }

    public void setDateModified(Date dateModified) {
        this.dateModified = dateModified;
    }

    @Column(name = "token", length = 36)
    public String getToken() {
        return this.token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "token_last_access", length = 19)
    public Date getTokenLastAccess() {
        return this.tokenLastAccess;
    }

    public void setTokenLastAccess(Date tokenLastAccess) {
        this.tokenLastAccess = tokenLastAccess;
    }

    @Column(name = "token_expired")
    public Boolean getTokenExpired() {
        return this.tokenExpired;
    }

    public void setTokenExpired(Boolean tokenExpired) {
        this.tokenExpired = tokenExpired;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "chkUser")
    public Set<Checklist> getChecklists() {
        return this.checklists;
    }

    public void setChecklists(Set<Checklist> checklists) {
        this.checklists = checklists;
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 79 * hash + Objects.hashCode(this.id);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ChkUser other = (ChkUser) obj;
        return Objects.equals(this.id, other.id);
    }

    @Override
    public String toString() {
        return "ChkUser{" + "id=" + id + ", email=" + email + ", firstName=" + firstName + ", lastName=" + lastName + ", company=" + company + ", dateCreated=" + dateCreated + ", dateModified=" + dateModified + '}';
    }

}
